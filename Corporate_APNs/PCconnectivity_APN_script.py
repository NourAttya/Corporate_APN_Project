
def PCconnectivityScript(APNname,IP,netmask,MTX,MTXNum,SecMTX,secMTXnum,SorD,pathToSave,VRFDest,IP1, netmask1):
    # open output text file
    script = open(pathToSave + APNname + "_Script.txt", "a")

    script.write(MTX + '-GGSN' + str(MTXNum) + ':\n')
    script.write('-----------\n')
    script.write('save configuration /flash/configfiles/Before_' + APNname + '.cfg -redundant\n')
    script.write('config\n')
    script.write('Context aaa\n')
    script.write('   apn ' + APNname + '\n')
    script.write('      accounting-mode none\n')
    script.write('      gtpp group PGW' + str(MTXNum) + ' accounting-context gn\n')
    script.write('      aaa group Corporate-radgom \n')
    script.write('      ip hide-service-address\n')
    if (SorD == "Static"):
        script.write('      ip address alloc-method no-dynamic allow-user-specified\n')
    else:
        script.write('     ip address alloc-method local\n')
    script.write('      ip access-group Corporate.vodafone.net-acl.in in\n')
    script.write('      ip access-group Corporate.vodafone.net-acl.out out \n')
    script.write('      ip source-violation ignore \n')
    script.write('      mediation-device no-interims \n')
    script.write('      ip context-name Gi-Corp2\n')
    script.write('      ip address pool name ' + APNname + '_pool\n')
    script.write('      active-charging rulebase corporate-mbc-rs\n')
    script.write('      ims-auth-service corporate-mbc-pool\n')
    script.write('      credit-control-group corporate-mbc-cc\n')
    script.write('end\n')
    script.write('\n')
    script.write('config\n')
    script.write('context Gi-Corp2\n')
    script.write('    ip vrf '+APNname+'_vrf\n')
    script.write('exit\n')
    if (SorD == "Static"):
      script.write(
        '      ip pool '+APNname+'_pool.0 '+str(IP)+" "+str(netmask)+' static group-name '+APNname+'_pool advertise-if-used vrf '+APNname+'_vrf \n')
    else:
        script.write(
            'ip pool '+APNname+'_pool.0 '+str(IP)+" "+str(netmask)+' private 0 group-name '+APNname+'_pool advertise-if-used vrf '+APNname+'_vrf \n')
    script.write('interface '+APNname+' tunnel\n')
    script.write('      ip vrf forwarding '+APNname+'_vrf\n')
    script.write('      ip address '+str(IP1)+" "+str(netmask1)+'\n')
    script.write('      tunnel-mode gre\n')
    script.write('        source interface gi-corp-lb2\n')
    script.write('        destination address '+VRFDest+'\n')
    script.write('      exit\n')
    script.write(' ip route 0.0.0.0 0.0.0.0 0.0.0.0 '+APNname+' vrf '+APNname+'_vrf\n')
    script.write('\n')
    script.write('end\n')
    script.write('save configuration /flash/configfiles/' + MTX + '-GGSN-running.cfg -redundant\n')
    script.write('------------------------------------------------------------------\n')
    script.write('\n')
    script.write(SecMTX + '-GGSN-' + str(secMTXnum) + ':\n')
    script.write('-----------\n')
    script.write('save configuration /flash/configfiles/Before_' + APNname + '.cfg -redundant\n')
    script.write('config\n')
    script.write('Context aaa\n')
    script.write('   apn ' + APNname + ' \n')
    script.write('      accounting-mode none\n')
    script.write('      gtpp group PGW' + str(secMTXnum) + ' accounting-context gn\n')
    script.write('      aaa group Corporate-radgom \n')
    script.write('      ip hide-service-address\n')
    if (SorD == "Static"):
        script.write('      ip address alloc-method no-dynamic allow-user-specified\n')
    else:
        script.write('     ip address alloc-method local\n')
    script.write('      ip access-group Corporate.vodafone.net-acl.in in\n')
    script.write('      ip access-group Corporate.vodafone.net-acl.out out \n')
    script.write('      ip source-violation ignore \n')
    script.write('      mediation-device no-interims \n')
    script.write('      ip context-name Gi-Corp2\n')
    script.write('      ip address pool name ' + APNname + '_pool\n')
    script.write('      active-charging rulebase corporate-mbc-rs\n')
    script.write('      ims-auth-service corporate-mbc-pool\n')
    script.write('      credit-control-group corporate-mbc-cc\n')
    script.write('end\n')
    script.write('\n')
    script.write('config\n')
    script.write('context Gi-Corp2\n')
    script.write('    ip vrf '+APNname+'_vrf\n')
    script.write('exit\n')
    if (SorD == "Static"):
      script.write(
        '      ip pool '+APNname+'_pool.0 '+str(IP)+" "+str(netmask)+' static group-name '+APNname+'_pool advertise-if-used vrf '+APNname+'_vrf \n')
    else:
        script.write(
            'ip pool '+APNname+'_pool.0 '+str(IP)+" "+str(netmask)+' private 0 group-name '+APNname+'_pool advertise-if-used vrf '+APNname+'_vrf  \n')
    script.write('interface '+APNname+' tunnel\n')
    script.write('      ip vrf forwarding '+APNname+'_vrf\n')
    script.write('      ip address '+str(IP1)+" "+str(netmask1)+'\n')
    script.write('      tunnel-mode gre\n')
    script.write('        source interface gi-corp-lb2-TG2\n')
    script.write('        destination address '+VRFDest+'\n')
    script.write('      exit\n')
    script.write('exit\n')
    script.write(' ip route 0.0.0.0 0.0.0.0 0.0.0.0 '+APNname+' vrf '+APNname+'_vrf\n')
    script.write('\n')
    script.write('end\n')
    script.write('\n')
    script.write('save configuration /flash/configfiles/' + SecMTX + '-GGSN-config.cfg -redundant\n')
    script.write('\n')
    script.write('---------------------------------------------------------------\n')
    script.write('\n')
    script.write('Rollback\n')
    script.write('=========\n')
    script.write('\n')
    script.write('config\n')
    script.write('    context aaa\n')
    script.write('       no apn ' + APNname + ' \n')
    script.write('end \n')
    script.write('\n')
    script.write('Add the below entries On All IDNSs:\n')
    script.write('----------------------------------------\n')
    script.write('\n \n')
    script.write(
        'create naptrrecord ' + APNname + '.apn.epc.mnc002.mcc602.3gppnetwork.org. -set order=100;preference=10;flags=a;service=x-3gpp-pgw:x-s5-gtp:x-gn;replacement=topoff.pgws5gn.' + MTX.lower() + 'gw.nodes.epc.mnc002.mcc602.3gppnetwork.org.\n')
    script.write('\n')
    script.write('update dnsserver\n')
    script.write('\n')
    script.write('Rollback on All iDNSs\n')
    script.write('======================\n')
    script.write('\n')
    script.write('delete naptrrecord ' + APNname + '.apn.epc.mnc002.mcc602.3gppnetwork.org.\n')
    script.write('\n')
    script.write('update dnsserver\n')
    script.close()